

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_cron" WITH SCHEMA "pg_catalog";






CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."mocks" (
    "id" bigint NOT NULL,
    "data" "jsonb" DEFAULT '{}'::"jsonb",
    "token" character varying DEFAULT ''::character varying NOT NULL,
    "method" character varying DEFAULT ''::character varying,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "sufix" character varying DEFAULT ''::character varying NOT NULL,
    "status_code" smallint NOT NULL
);


ALTER TABLE "public"."mocks" OWNER TO "postgres";


ALTER TABLE "public"."mocks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."mocks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."posits" (
    "id" bigint NOT NULL,
    "title" character varying DEFAULT ''::character varying NOT NULL,
    "slug" character varying DEFAULT ''::character varying NOT NULL,
    "color" character varying DEFAULT ''::character varying NOT NULL,
    "tags" character varying[],
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "content" "text"[]
);


ALTER TABLE "public"."posits" OWNER TO "postgres";


ALTER TABLE "public"."posits" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."posits_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."mocks"
    ADD CONSTRAINT "mocks_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."posits"
    ADD CONSTRAINT "posits_pkey" PRIMARY KEY ("id");



CREATE POLICY "Enable delete for authenticated users only" ON "public"."mocks" FOR DELETE TO "authenticated" USING (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."mocks" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable select for authenticated users only" ON "public"."mocks" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable update for authenticated users only" ON "public"."mocks" FOR UPDATE TO "authenticated" USING (true);



ALTER TABLE "public"."mocks" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."posits" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";








GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";




































































































































































































































GRANT ALL ON TABLE "public"."mocks" TO "anon";
GRANT ALL ON TABLE "public"."mocks" TO "authenticated";
GRANT ALL ON TABLE "public"."mocks" TO "service_role";



GRANT ALL ON SEQUENCE "public"."mocks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."mocks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."mocks_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."posits" TO "anon";
GRANT ALL ON TABLE "public"."posits" TO "authenticated";
GRANT ALL ON TABLE "public"."posits" TO "service_role";



GRANT ALL ON SEQUENCE "public"."posits_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."posits_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."posits_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
